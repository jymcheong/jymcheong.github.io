{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#attack-life-cycle-rinse-repeat","title":"Attack Life Cycle -&gt; RINSE &amp; Repeat","text":"<p>Attackers always RINSE &amp; repeat... </p> <p>A defender's job is to break this cycle! Click here to learn more... </p>"},{"location":"About%20Jym/","title":"About Jym","text":"<p>I am a Certified Information System Security Professional with 20 years of experience across diverse roles.</p> <p>LinkedIn | Github</p>"},{"location":"About%20Jym/#achievements","title":"Achievements","text":"<ol> <li>As Intern (2003), I developed the 1st multi-user WinCE Singapore Police Force Traffic Enforcement app (that\u2019s way before things like iOS &amp; Android) &amp; augmented native mail app to enforce multi-user AES storage encryption.</li> <li>Knowledge-Transfer of 1st batch of Singapore ICA (immigration) passport scanners was pioneered by me. I also pioneered the product development of &gt; 50% cost-effective versions of such multi-illumination optical scanners that are deployed in ALL money changers in Singapore.</li> <li>Created the first ICAO PKI LDS verification SDK used by Immigration hand-held devices based on WinCE.</li> <li>Early generation of SingPass (national authentication system) root cause analysis to trace very obscure issues through the use of visual source-code analysis, in &lt; 1 week of joining ex-company. It was troubleshooting secure codes within Hardware Security Module enclaves.</li> <li>Product development &amp; patent of a virtual printer driver that cut down the time to deliver service-value from months to days. I also designed &amp; implemented self-service software licensing sub-systems to encourage adoption of optical security solutions.</li> <li>Delivered ST Engineering Cyber Security Operations Center on time &amp; within budget. As technical lead, I drafted Tender Technical Specifications, managed Product Testing &amp; Vendor short-listing, project delivery \u2026 to co-development of detection use-cases along side with HPE Security consultants, &amp; as advisor to various business stake-holders. Before that, I was deeply involved with other government SOCs, designing high performance tests, gained in-depth understanding of what works &amp; what doesn\u2019t.</li> <li>Test &amp; Evaluation of cutting edge startups. Grew a team of fresh hire &amp; mid-career engineers to evaluate product categories that are now buzz-words. We tested cutting edge stuff (then) to understand strengths &amp; weaknesses. Things like Malware Sandboxes, Remote-Browsers, Continous Validation, Cyber-Range Automation, Endpoint Detection &amp; Response, User Endpoint Behaviorial Analytics &amp; the likes.</li> </ol>"},{"location":"blog/","title":"Latest","text":""},{"location":"blog/2024/08/17/you_dont_need_windows_network/","title":"You don't need Windows network","text":""},{"location":"blog/2024/08/17/you_dont_need_windows_network/#background","title":"Background","text":"<p>This entry demonstrates the application of Design Thinking to enhance network usability and utilises the Attack Life Cycle (ALC) mental model to illustrate security improvements.\ufe0f</p> <p>We use a hypothetical tech-refresh exercise for a small law firm (Ace Legal LLP) to show how Design Thinking &amp; ALC can be used to come up with a better network that is both user-friendly &amp; secure.</p>"},{"location":"blog/2024/08/17/you_dont_need_windows_network/#what-is-design-thinking","title":"What is Design Thinking?","text":"<p>Design thinking is a human-centered, iterative process for solving complex problems that involves:</p> <p>Source: dimagi </p> <ol> <li>Empathising\u00a0with users to understand their needs</li> <li>Defining\u00a0the problems from a human-centric perspective</li> <li>Ideating\u00a0to generate creative solutions</li> <li>Prototyping or Experimenting\u00a0potential solutions</li> <li>Testing\u00a0prototypes and iterating</li> </ol> <p>It is a collaborative, optimistic, and experimental mindset that embraces ambiguity to create innovative solutions that are desirable, feasible, and viable. Although originally used in product development, we can adapt the main ideas to select (instead of building) products for a new network. We then use ALC mental model to evaluate the security benefits of the new prototype.</p>"},{"location":"blog/2024/08/17/you_dont_need_windows_network/#whats-wrong-with-ace-legals-existing-network","title":"What's wrong with Ace Legal's existing network?","text":""},{"location":"blog/2024/08/17/you_dont_need_windows_network/#background_1","title":"Background","text":"<p>Ace Legal is a small but high-value firm with 2 partners &amp; 5 other employees operating for 5 years. They engaged a small IT service provider to handle their small office network, which comprises of Microsoft Windows laptops &amp; a file-cum-printer server.</p> <p>Following a ransomware attack and Microsoft cloud disruptions that significantly hampered their business functions, the partners need to take action to enhance their office network security.\ufe0f</p> <p>The partners being tech-savvy and curious about enhancing their cyber security knowledge for both personal and clients' benefit, discovered the concept of the Attack Life Cycle. Intrigued, they explored the application of Design Thinking to ensure both functionality and security.\ufe0f</p>"},{"location":"blog/2024/08/17/you_dont_need_windows_network/#pain-points-wrt-needs","title":"Pain-points w.r.t Needs","text":"<p>Let's start off with the first two aspects: </p> <ul> <li>Empathise needs, from partners to employees!</li> <li>Define the pain-points they had with their existing network &amp; products.</li> </ul> <p>Using a Need-vs-Pains table, they enumerated the key business needs &amp; respective pain-points:</p> Need Pains / Problems Compliance &amp; Risk Management - The ransomware incident was a HUGE hit to their reputation &amp; the partners need to regain clients' confidence. They were fortunate that only one of the clerk's desktop PC &amp; a legacy printer-cum-file server (hooked to a dot matrix printer &amp; laser printers) were affected. All other laptops were either sleeping or out of office network. Cloud service reliability &amp; usability. - The Microsoft cloud outages triggered this need to change.- Sharepoint is too complex to manage as a Document Management Systems. Authenticating into Windows &amp; non-Microsoft web services (e.g. cloud based Practice Management System) - Strict password policy &amp; constant changes are annoying. Users end up using same password for everything since it is hard to remember so many passwords. Easy way to manage calendars - Everyone in the firm uses iPhone. Too much hassle to switch between two different calendars. Share iCloud calendar as a public URL just to integrate into Microsoft Outlook is a BAD idea. <p>Avoiding another ransomware incident is Ace Legal's TOP priority!</p>"},{"location":"blog/2024/08/17/you_dont_need_windows_network/#why-is-the-existing-network-susceptible-to-repeated-attacks","title":"Why is the existing network susceptible to repeated attacks?","text":"<p>After enumerating the usability needs &amp; pains, let's use ALC mental model to review the security gaps (the push factors). After which, we re-evaluate the new approach again to compare the pull factors in favour of the proposed solution.</p> <p></p>"},{"location":"blog/2024/08/17/you_dont_need_windows_network/#its-cheap-easy-to-attack-windows-network","title":"It's cheap &amp; easy to attack Windows network","text":"<p>System Susceptibility condition is easily met since the cost of attacking Windows is essentially free. In terms of Threat Capability, the bar is low. </p> <ul> <li>The barrier to entry is so low that many criminals can pick up from watching Youtube &amp; following tutorials from whatever \"hacker\" forums. Github has abundance free offensive tools!</li> <li>Ace Legal's network is like a home lab that it is almost a walk in the park.</li> <li>Attackers can literally take their own sweet time to explore the network since Ace Legal does not subscribe to any monitoring services aka Managed Security services.</li> <li>The malware backdoor often include key-loggers &amp; browser scrapers. Fortunately, the desktop PC was not used to access the cloud Practice Management System.</li> <li>The saving grace was their firm's password convention (which made passwords long, distinct &amp; hard to guess) that they used diligently for the sake of meeting legal compliance for all files stored in file-server after printing hard copies.</li> </ul>"},{"location":"blog/2024/08/17/you_dont_need_windows_network/#anti-virus-wont-stop-attackers-phishing-wont-stop-either","title":"Anti-Virus won't stop Attackers &amp; Phishing won't stop either","text":"<p>We won't be getting rid of email anytime soon. Threat Accessibility is here to stay...</p> <ul> <li>Obfuscating malware with encryption &amp; various low-cost technique are very effective against most Anti-Virus &amp; most signature-based commodity security products.</li> <li>Hiding malware within password protected zip file easily denies email scanning.</li> <li>Most attackers would have tested their payloads before the campaigns thus typically not stopped by computers' Anti-Virus.</li> <li>Setting up valid domains to conduct phishing campaign is trivial.</li> <li>Attackers are patient &amp; persistent.</li> <li>It's already very difficult to spot deceptive email prior to the boom of <code>Gen</code>erative AI, it will get worse as adversaries adopt GenAI quickly.</li> </ul>"},{"location":"blog/2024/08/17/you_dont_need_windows_network/#what-about-cloud-or-software-as-a-service","title":"What about Cloud or Software-as-a-Service?","text":""},{"location":"blog/2024/08/17/you_dont_need_windows_network/#cloudy-security","title":"Cloudy Security","text":"<ul> <li>On paper, the online service is only as assuring as the certifications it has, e.g. Service Organization Control (SOC) 2 &amp; Payment Card Industry Data Security Standard (PCI DSS).</li> <li>In practice, it's all about software quality, the 1st line of fire being the exposed web service ports (think ALC <code>1.Recon -&gt; 4.Execute Objectives</code>).</li> <li>When the application is poorly design or implemented, it doesn't matter how many certifications or layers of encryption.</li> </ul> <p>Assuming it is harder to attack at systems or application layer, then attackers will naturally target users...</p>"},{"location":"blog/2024/08/17/you_dont_need_windows_network/#identity-as-the-perimeter","title":"Identity as the PERIMETER","text":"<p>Email &amp; passwords are weak boundaries! Once adversaries get into Windows endpoint, it's trivial to steal credentials with key-loggers &amp; tools to extract session tokens &amp; credentials from browsers.</p> <ul> <li>As for as the Cloud services are concern, all these service requests will look legitimate especially when attackers have full control over the infected endpoints as proxies.</li> <li>Once email account is being taken over, it's hard know because attackers can easily delete security alerts emails &amp; extract useful information to further their objectives.</li> </ul>"},{"location":"blog/2024/08/17/you_dont_need_windows_network/#how-to-ideate","title":"How to Ideate?","text":"<p>Now that we are clear with usability &amp; security issues, let's use a human-centric approach by first focusing on the partners &amp; staff preferences &amp; dislikes:</p> <ul> <li>Everyone in the firm uses an iPhone.</li> <li>They have personal iPads &amp; are familiar with Apple products &amp; ecosystem.</li> <li>The partners &amp; staff lawyers disliked the bulky laptops &amp; mostly had them on sleep mode, until the need to work with them.</li> </ul>"},{"location":"blog/2024/08/17/you_dont_need_windows_network/#what-if-ipad-becomes-a-desktop","title":"What if iPad becomes a desktop?","text":"<p>I shared with the partners that iPadOS Stage Manager has matured to a point that it is very usable, especially for their use-cases:</p> <p></p> <p>They really liked the idea &amp; were pleasantly surprised that using it like this was possible. But one of the partners asked, why iPad &amp; not Macbook?</p>"},{"location":"blog/2024/08/17/you_dont_need_windows_network/#why-ipad","title":"Why iPad?","text":"<p>It's simple: </p> <p>There isn't a single case of Ransomware on iPad because it is technically hard &amp; costly.</p> <p>I extracted payout data from an established exploit brokerage for comparison:  It takes deep skills to develop such exploits, which is why they command a premium unlike cheap or free Windows malware.</p>"},{"location":"blog/2024/08/17/you_dont_need_windows_network/#its-expensive-to-hack-into-ipads","title":"It's expensive to hack into iPads","text":"<p>Running initial malicious codes is not enough, attackers need to stay or \"persist\" within the affected device, so as to further explore the network to complete objectives.</p> <p>This also means moving laterally within a network of iPads (e.g. to reach that legacy file-cum-printer server), is very difficult. </p> <p>Attackers next best move is to steal IDs &amp; passwords because attacking established cloud services directly is hard (e.g. at the API level, might as well get paid from bug bounty programmes). They can still send emails with fake sign-in links!</p>"},{"location":"blog/2024/08/17/you_dont_need_windows_network/#how-to-deal-with-passwords","title":"How to deal with passwords?","text":"<p>Recall earlier in the Pain-Point table, dealing with passwords is a pain, so how would iPads help?</p> <ul> <li>At device level, they only need to key in once after device boots up.</li> <li>Apple's built-in password manager is useful for web sites that are less sensitive (e.g. social media), just generate a long unique password per site, select &amp; use, no need to type.</li> <li>For sensitive services like their cloud Practice Management System (PMS), they can either opt to use passkeys instead of password if the service allows.</li> <li>Otherwise, turn on Multi-Factor authentication with One-Time-Password whenever possible but avoid web page logon whenever possible because there's hardly any security value of keying everything into the same fake web-page. Attackers just capture &amp; replay at their end to get a valid session!</li> </ul> <p>Fortunately, Ace Legal is using a cloud PMS that has a full screen iPad app. In that case, simply avoid browser-based sign-in altogether!</p>"},{"location":"blog/2024/08/17/you_dont_need_windows_network/#experiment-test","title":"Experiment &amp; Test","text":"<p>Based on the understanding gained from this exercise, the partners are willing to replace all laptops with iPads since the risk of another Ransomware attack is greatly reduced.</p> <ul> <li>The rest of the staff also found it easy to use Stage Manager with large external monitor, the experience is somewhat similar to that of a laptop.</li> <li>Their IT service provider manage to configure their iPads to print to their dot matrix printer.</li> <li>They got rid of the Windows file server &amp; replaced with iCloud storage. </li> <li>The partners tested Jamf, Kandji (both 3rd party Apple Mobile Device Management systems) &amp; Apple Business Essentials offerings &amp; picked Kandji, because it had Endpoint Detection &amp; Response agent add-on in case they want to add Macbooks to the fleet. </li> <li>The built-in Page, Numbers, Keynote &amp; so on worked for them, no need to pay subscription for basic productivity tools.</li> </ul> <p>Most importantly, the migration of emails, documents &amp; workflows was  painless!</p>"},{"location":"blog/2024/08/17/you_dont_need_windows_network/#before-vs-after-comparison","title":"Before vs After Comparison","text":"Network with Windows laptops iPad-based network Usability Poor, laptop is always slow. Good &amp; fast. Reliability Poor:Updates caused all kinds of issues. Office 365 outages. Very reliable. Authentication Painful to type, change &amp; remember. Easy with TouchID &amp; FaceID.Easy native password management for browser based sign-in.Better security with generated strong passwords for services that only accepts passwords.Use passkey &amp; Multi-Factor for more sensitive online services. Central Management There was no central management of laptops &amp; assets. Ace Legal's IT provider was relying on Excel spreadsheets.A few Blue-Screen-of-Death after Windows updates forced the partners to stop automatic updates. The partners could easily setup once on their own with Kandji MDM, it's that user-friendly.Patch management is easy, reliable &amp; automatic. Probability of recurring Ransomware incident. HIGH, because low-cost intrusions can be achieved by low skilled criminals. LOW, because it is costly to intrude into iPad devices directly. Susceptibility to credential theft HIGH, due to weak reused passwords. The PMS did not have a Windows thick client app, means only browser sign-in, which is low cost to spoof. LOWER, because using PMS iPad app directly, avoid signing in sensitive services related to Ace Legal with browsers. Data Theft Susceptibility High, there are files residing on laptops, some of which may not have the password protection during the drafting phase. There's no remote locking of lost laptops. Windows Bitlocker encryption key can be extracted with physical means LOW since file direct extraction whether logically or physically is non-trivial for iOS &amp; iPad. The shared files on iCloud are encrypted at service level &amp; file level as per the firms password convention (e.g encrypt PDF &amp; Apple Page documents with password).MDM allows remote locking &amp; data-erase for lost devices."},{"location":"blog/2024/08/17/you_dont_need_windows_network/#closing","title":"Closing","text":"<ul> <li>Cyber Security is mostly a software quality problem. </li> <li>Windows don't have a good track record of being user-friendly or secure.</li> <li>The offline Windows laptops limited their damage.</li> <li>Their diligence with file-level password protection mitigated double-extortion, which is common with such Ransomware campaign.</li> <li>Double extortion means when victims decide not to pay for ransom, attackers threaten to publicly release or sell victims' data to dark web.</li> <li>This is NOT a sponsored post by Apple or any of the mentioned services.</li> <li>This is also NOT a post to bash Microsoft or Windows.</li> <li>The objective fact if you look at 1st ALC with Windows endpoint vs iPads, is to quickly highlight the cost of attack without going into nitty gritty technical nuances.</li> </ul> <p>By adapting Design Thinking approaches, we achieve both usability &amp; security by making it costly for Threat Accessibility.  And with Attack Life Cycle mental model, we can objectively evaluate the security improvements.</p>"},{"location":"blog/2024/08/19/net_bloat/","title":".NET Bloat","text":"<p>Using .NET 8.0: 161MB file just to show a WinForm... </p>"},{"location":"blog/2021/05/12/install_zerotier_on_your_linux_vm__join_your_private_network/","title":"Install ZeroTier on your Linux VM &amp; join your private network.","text":"<p>Assign: Yang Jun Date: May 12, 2021 2:30 PM (GMT+8) \u2192 4:30 PM Status: Completed</p> <p>Internship Activity Kanban</p>"},{"location":"blog/2021/05/12/install_zerotier_on_your_linux_vm__join_your_private_network/#how-to-install-zerotier-on-linux-vm","title":"How to install ZeroTier on Linux VM?","text":"<p>Reference: https://www.zerotier.com/download/</p> <p>The installation of ZeroTier on Linux can be done with one line of command:</p> <p><code>curl -s https://install.zerotier.com | sudo bash</code></p> <p></p> <p>*Note the ZeroTier address that was generated. </p>"},{"location":"blog/2021/05/12/install_zerotier_on_your_linux_vm__join_your_private_network/#how-to-join-the-private-network","title":"How to join the private network?","text":"<p>From the command line, simply type <code>sudo zerotier-cli join NetworkID</code> with NetworkID being the 16-digit network ID of the network you wish to join:</p> <p></p> <p>You will receive a 200 join OK message, confirming that the ZeroTier service on your server has understood the command. If you do not, double-check the ZeroTier Network ID you entered.</p> <p>Since we created a private network, we now need to authorize the Linux VM.</p> <p>Step 1: Go to the ZeroTier Web Console. We can now see that the Online Members has changed from 0 to 1, indicating that the Linux VM has successfully joined the private network. However, the Authorized Members remains as 0 as we have yet to authorize the Linux VM.</p> <p></p> <p>Step 2: Select the network and scroll down till you reach the Members section. You should spot an entry marked as Online, with the same address that you noted earlier.</p> <p></p> <p>Step 3: In the first column marked Auth?, tick the box to authorize the Linux VM to join the network. The ZeroTier Controller will allocate an IP address to the VM from the range the next time it calls the SDN.</p> <p></p> <p>Allocating the IP address may take a moment. After a while, you can see that it has been assigned a private IP address.</p> <p></p> <p>To double check that the authorization was successful, return back to the ZeroTier Web Console. We can see that the number of Authorized Members has changed from 0 to 1.</p> <p></p> <p>With that, we have connected the Linux VM to the private software-defined network.</p>"},{"location":"blog/2024/08/24/memgraph/","title":"Memgraph","text":""},{"location":"blog/2024/08/24/memgraph/#tldr","title":"TL;DR","text":"<p>Performant, excellent documentation, easy to deploy, Neo4j compatible (both queries &amp; client drivers) &amp; even supports custom functions with Python, along with C/C++ &amp; Rust! </p>"},{"location":"blog/2024/08/24/memgraph/#getting-started","title":"Getting Started","text":"<p>Fire up console: <code>curl -sSf \"https://install.memgraph.com\" | sh</code></p> <p>Things can screw up... </p> <ul> <li>in my case port 3000 was in use, web UI frontend won't start</li> <li>Bring it down with <code>docker-compose down</code> within the <code>~/memgraph-platform</code></li> <li>Edit <code>docker-compose.yml</code>, change <code>3000:3000</code> to <code>3030:3000</code> or whatever not used</li> <li>Run <code>docker-compose up -d</code>, everything should work</li> </ul>"},{"location":"blog/2024/08/24/memgraph/#well-designed-onboarding-experience","title":"Well Designed Onboarding Experience","text":"<p>I have tinkered with Neo4J, OrientDB, FalkorDB, DGraph... but I like this the most so far because... </p> <p>Conforms to good UX principles from Prof Shneiderman's Visual Information Seeking Mantra:</p> <p>Overview (first) &gt; Zoom &amp; Filter &gt; Details on demand</p> <p>In this case, it didn't just load some arbitrary data &amp; leave the user clueless. You can see basic schema of this data-set (top) &amp; overview of the data-set: </p> <p>Providing a set of queries for exploration (Details on Demand): </p> <p>UI actually warns about the large returned data-set &amp; asked if we want to proceed! Nice!</p> <p>For those into more advanced stuff: https://memgraph.com/docs/advanced-algorithms/available-algorithms/node2vec</p>"},{"location":"blog/2024/08/24/memgraph/#improving-deployment-experience","title":"Improving Deployment Experience","text":"<ul> <li>Avoid hard-coding port values within <code>docker-compose.yml</code>.</li> <li>Deployment scripting should check for port availability especially for frontend since every other frontend love <code>3000</code>!</li> <li>Script will then pick available port, write into a <code>.env</code> &amp; <code>docker-compose.yml</code> reference environment variable.</li> <li>Of course once container started, SHOW the frontend URL &amp; further instructions clearly!</li> </ul>"},{"location":"mental%20models/Attack%20Life%20Cycle/","title":"Attack Life Cycle","text":""},{"location":"mental%20models/Attack%20Life%20Cycle/#attackers-rinse-repeat","title":"Attackers RINSE &amp; repeat","text":"<p>For a successful attack, all three <code>conditions</code> depicted by the triangles must be met.\ufe0f</p> <ul> <li>A target is worthwhile when it has Value &amp; Vulnerabilities. </li> <li>Threat Actors need to reach the target's Attack Surface (the sum of all means) to exploit those vulnerabilities. </li> <li>Attackers need tools, techniques &amp; resources to mount an attack.</li> </ul> <p></p> <p>To meet these conditions, attackers need to perform:</p> <ul> <li>Reconnaissance - Gather information to assess <code>Value &amp; Vulnerabilities</code> that compound to <code>System Susceptibility</code></li> <li>Infiltrate Networks - <code>Threat Accessibility</code> refers to the reachable means (Attack Surface) to get into target networks</li> <li>Spread Laterally - Stay within target networks undetected depends on <code>Threat Capability</code> which requires tools, techniques &amp; resources </li> <li>Execute Objectives - to steal information which impacts Confidentiality, tamper with system &amp; data Integrity &amp; deny Availability of data &amp; networks. For critical Cyber Physical systems, it can threaten Safety &amp; lives.</li> </ul> <p>To effectively counteract potential attacks, identifying and disrupting the appropriate conditions is crucial. However, determining which conditions to prioritise can be a complex decision.</p>"},{"location":"mental%20models/Attack%20Life%20Cycle/#big-picture","title":"Big Picture","text":"<p>This model provides relationships between defensive concepts &amp; considerations with offensive phases: </p> <p>First, we examine the process from the standpoint of an adversary.\ufe0f</p>"},{"location":"mental%20models/Attack%20Life%20Cycle/#direct-vs-indirect-access","title":"Direct vs Indirect Access","text":"<p> Examples of direct access from <code>1.Recon</code> to <code>4.Execute Objectives</code>: Poor web-server configuration leads to exposure of unprotected sensitive files that can be downloaded by anyone, or network routers with default passwords &amp; ports exposed to the Internet. Low hanging fruits for adversaries!* </p> <p> From <code>1.Recon</code> to <code>2.Infiltrate Networks</code>: Attackers use LinkedIn to figure out who are the HR executives (Information Gathering), send deceptive emails to lure them (Phishing) to click on malicious links or execute malware. </p> <p>Just need one employee to give attackers that chance to gain control over a HR asset when the malware infects like a <code>Patient Zero</code> &amp; persists within that endpoint. Why go through all that trouble when attackers can buy access into corporate Virtual Private Network?</p> <p></p> <p>The flow chart covers both direct &amp; indirect access. The attackers have the skills to carry out intrusions from either way. Internet gives them the access to reach vulnerable assets &amp; victims, otherwise attackers need to be physically present or near targets.</p> <p>Attacks are effective only when all conditions are fulfilled, yet it will fail if any single condition is disrupted. For instance, when employees are vigilant, they report the phishing emails. With Multi-Factor VPN authentication, 1st factor of ID &amp; password sold on dark web is less threatening.</p>"},{"location":"mental%20models/Attack%20Life%20Cycle/#disrupt-attacks-by-design","title":"Disrupt Attacks by Design","text":"<p>Instead of reacting to yet another vulnerability announcement, another patching exercise (e.g. Microsoft Patch Tuesday) or worst, automatic updates that disrupted millions of Windows hosts. </p> <p>The majority are either oblivious or disbelieving of the fact that they can be under attack, or aware but stuck in a Chase-After-Bad posture, which is unending &amp; costly.</p> <p></p> <p>My interns (unaware but curious) learnt about Threat Accessibility &amp; managing privileged administrator access through this lesson plan:</p> <ul> <li>Sign up a free cloud Linux server.</li> <li>Start the virtual Linux server &amp; use a strong password.</li> <li>Configure audit log to review authentication attempts.</li> <li>Start monitoring audit events.</li> <li>They will notice that within a short while, many failed secure shell or SSH attempts will start appearing in that console session earlier.</li> </ul> <p>Weak passwords used for remote root access in Linux systems increase the risk of successful brute-force login attacks.\ufe0f</p> <ul> <li>I directed them to some free Virtual Private Networks like ZeroTier &amp; Twingate.</li> <li>The students reconfigured their servers to only accept connections from the same private network.</li> <li>NO MORE brute-force attempts. Even if the passwords were weak, attackers cannot reach those servers to test it. </li> </ul> <p>Designing with Threat Accessibility in mind enables us to disrupt attacks effectively while maintaining both usability and security.\ufe0f </p> <p>What about the other two attack conditions; <code>System Susceptibility &amp; Threat Capabilities</code> ? </p> <p>They are part of the unending Chase-After-Bad posture!</p> <p>Getting rid of vulnerabilities by patching is an impossible task. </p> <ul> <li>Vulnerabilities is not limited to software bugs, but include poorly designed features that can be abused.</li> <li>Even if hypothetically Windows were free of bugs, there are numerous system tools &amp; mechanisms susceptible to misuse by attackers.</li> <li>All complex operating systems, including Linux, MacOS &amp; mobile ones have such vulnerabilities.\ufe0f</li> <li>I'm not suggesting \"don't need to patch\", but we have to exercise caution and careful consideration before implementing any changes to production systems.\ufe0f</li> </ul> <p>Threat actors are extremely motivated, creative &amp; resourceful. They often use free or cheap tools to evade costly controls &amp; monitoring operations at a fraction of the cost! </p>"},{"location":"mental%20models/Attack%20Life%20Cycle/#avoid-single-factor-authentication","title":"Avoid Single-Factor Authentication","text":"<p>Single-factor authentication refers to the process of verifying identity through the use of one identifier, such as an email address or username, coupled with a password.\ufe0f </p> <p>Upon obtaining these credentials, there is a significant risk that password reuse will grant Threat Actors access to other services for affected users.\ufe0f</p> <p>We can disrupt such unauthorised access with either Multi-Factor authentication or replacing passwords with passkeys.  </p> <p>Negligence like default passwords (e.g. exposed database) or worse, total lack of access control becomes low hanging fruits for attacks to reach objectives directly from Phase 1 to 4.</p>"},{"location":"mental%20models/Attack%20Life%20Cycle/#avoid-admin-ports-exposure","title":"Avoid Admin Ports Exposure","text":"<p>Admin access through ports like SSH, RDP, VNC should never be exposed over the Internet. Even web admin pages should be limited to a small set of fixed Internet Protocol addresses whenever possible.</p> <p>There are many freemium software private networks like ZeroTier, Twingate, Tailscale &amp; the likes to limit access. Instead of using public Internet address, simply configure such remote admin services to use private network address accessible to a few admin endpoints, just like what my interns did.</p>"},{"location":"mental%20models/Attack%20Life%20Cycle/#reduce-the-need-for-signature-based-controls","title":"Reduce the need for Signature-based Controls","text":"<p>The Crowdstrike Channel File incident is a prime example of Signature-based control. Updates are needed to counter whatever new offensive techniques. </p> <p>Due to the ever-evolving nature of offensive tactics &amp; techniques, continuous updating of signatures became the unfortunate norm to keep pace with new threats.\ufe0f But malware &amp; offensive techniques are part of an infinite set, such reactive or Tit-for-Tat controls controls will never keep up.</p> <p>More examples of Signature-based Tit-for-Tat Controls (non-exhaustive) :</p> <ul> <li>Anti-virus</li> <li>Web App Firewall</li> <li>Network Intrusion Detection </li> </ul> <p>Encryption facilitates evasion for malware. Malicious network traffic can be obscured through encryption, with a significant proportion of Internet communications encrypted.\ufe0f</p>"},{"location":"mental%20models/Attack%20Life%20Cycle/#apply-design-thinking-alc","title":"Apply Design Thinking &amp; ALC","text":"<p>Now that you have some idea of the pitfalls to avoid, we are ready to use this scenario of a tech refresh for a hypothetical law firm, to come up with a more usable &amp; secure network, by applying Design Thinking &amp; Attack Life Cycle mental model.</p>"},{"location":"mental%20models/Attack%20Life%20Cycle/#recap","title":"Recap","text":"<ul> <li>Attackers will RINSE &amp; repeat within this Attack Life Cycle.</li> <li>They can attack directly at services or indirectly, by getting into target networks &amp; work their way within to meet their offensive objectives (steal, tamper &amp; deny access to data or systems).</li> <li>Although cyber attacks seem like a very complex topic, there are only three conditions necessary for any successful attacks.</li> <li>It is sufficient to disrupt attack by dealing with any one of the conditions, but keeping up with system vulnerabilities by patching, paying for more controls to address ever changing offensive techniques is unsustainable.</li> <li>We can disrupt attacks by design to make systems usable &amp; accessible to legitimate users but much harder &amp; costly for attackers, instead of just reacting to system vulnerabilities &amp; threat techniques.</li> <li>A concrete scenario was used to illustrate how it can be done.</li> </ul> <p>Once you have a high-level view of attack as a life cycle &amp; the necessary conditions, it's time to dive deeper into Tactics Techniques &amp; Procedures.</p>"},{"location":"mental%20models/Code%20Execution/","title":"Code Execution -  simple as 1, 2 and 3","text":"<p>How this model came to be...</p> <p>Back then, I led a small Test &amp; Evaluation team (around 201X). We were testing out different up-coming cyber security products, like EDR (e.g. Carbon Black), malware sandboxes (e.g. FireEye)... The keyword that always appeared when evaluating such products is MALWARE; the whole point of malicious software is to execute arbitrary codes.</p> <p>We looked at various public malware repositories, public &amp; commericial tools. As we reviewed the samples, we noticed some were PDFs, MS Office documents, and Active-Contents files that had embedded scripting. </p> <p>Malicious Code-Execution is NOT restricted to compiled executables.</p> <p>We noticed some patterns:</p> <ol> <li>Write a new PE file that wasn't in the target in the first place, then someone or something executes it...</li> <li>Content based but Non-PEs files that may run malicious scripting with PDF (javascript) or a MS Office document (vba) &amp; various formats </li> <li>Run an exploit tool (like Eternal Blue exploit CVE-2022-46869) that triggers a vulnerable service for remote arbitrary code execution (e.g. shellcodes), which in turn runs 1 or 2 (e.g. cmd / powershell scripting)</li> </ol> <p>As a team lead, I concluded &amp; explained to my engineers that a pragmatic mental model has better operational utility than memorizing some malware taxonomy or attempt to enumerate all \"bad\" files or techniques under the sun... </p>"},{"location":"mental%20models/Code%20Execution/#the-three-types-model","title":"The Three Types Model","text":""},{"location":"mental%20models/Code%20Execution/#type-1-new-file-execution","title":"Type 1: New File Execution","text":"<p>Write a new PE file to disk and execute it (the classic write-&amp;-run \"malware\" approach).</p>"},{"location":"mental%20models/Code%20Execution/#type-2-living-off-the-land","title":"Type 2: Living Off The Land","text":"<p>Abuse legitimate system tools and scripting (PowerShell, VBA, JavaScript) with (e.g. there's DLL but it never touch the disk, all in memory) or without new executables.</p>"},{"location":"mental%20models/Code%20Execution/#type-3-exploit-driven","title":"Type 3: Exploit-Driven","text":"<p>Exploit vulnerabilities for arbitrary code execution, which chains into Type 1 or 2. Exploits that gained marketing/marketable names like Log4Shell, EternalBlue, etc, are typically Type 3.</p>"},{"location":"mental%20models/Code%20Execution/#key-insights","title":"Key Insights","text":"<ul> <li>Types 1 &amp; 2 abuses OS features (can't be patched, but at best hardened). </li> <li>Type 3 exploits bugs (should be fixed with updates). <p>This model is not Windows specific... First two types are very reliable across different OS variants but Type 3 tend to be version specific.</p> </li> </ul> <p>There are finer aspects within this model beyond just Feature vs Bug:</p> <ul> <li>Fore vs Background launch</li> <li>Before vs After Logon session</li> <li>Egress &amp; Cross-Process activities</li> <li>Privilege sequence</li> </ul> <p>All of these aspects are related to analytics, but it really just boils down to how we ask forensical questions.</p>"},{"location":"mental%20models/Code%20Execution/#fore-vs-background-process","title":"Fore vs background process","text":"<p>\"Process\" refers to the running memory instance of a program stored on disk.</p> <ul> <li>Most sneaky backdoors are background processes within user touch-points for obvious reasons.</li> <li>Most user-zone infiltrations tend to involve users' interactions or involvement e.g. email phishing.</li> <li>Server side infiltration however could be a chain of background processes, starting from a vulnerable listening process, triggered to download &amp; run malicious codes.</li> <li>Beyond parent-child process relationship, there's analytical value in tracking the transition from foreground to background spawning e.g. a foreground MS Office process spawned a background powershell process.</li> <li>Play a role in discerning remote attack from insider actions for critical infrastructure environment, especially when we are able to track at both OS &amp; secure KVM level (e.g. session recording).</li> </ul> <p>This process attribute is unfortunately not native to Windows, unlike Linux (e.g. tty, SessionID) &amp; MacOS that have fields in audit logs to infer whether it is a back/foreground process. We had to engineer it ourselves for Windows.</p>"},{"location":"mental%20models/Code%20Execution/#before-vs-after-logon-session","title":"Before vs After Logon Session","text":"<p>Timing &amp; sequence matter. For instance...</p> <ul> <li>A vulnerable server with Log4j listens on an exposed port, attacker sends it a payload that triggers a string of all background processes without anyone signing into the server...</li> <li>Windows Sticky Keys backdoor launches a SYSTEM cmd.exe before any valid user logon.</li> <li>A email phishing victim, can only be a victim after he or she logon &amp; interacts with some malicious contents that seems normal but runs abnormal hidden processes...</li> </ul> <p>We can contrast &amp; visualize all that like this: </p>"},{"location":"mental%20models/Code%20Execution/#cross-process-egress-activities","title":"Cross-Process &amp; Egress Activities","text":"<p>While (Fore vs Background) + (Before vs After Logon) can characterise a set of process sequence like payload delivery or exercising a backdoor, Cross-Process &amp; Egress activities let us zoom into what's next for that sequence w.r.t TTP or Tactics (the boxes below, WHAT), Techniques (specific &amp; numerous methods related to each box, HOW) &amp; Procedures (WHEN to do WHAT as visualized in a graph):</p> <p></p> <ul> <li>The red lines of Code-Execution to <code>Report to C2...</code> &amp; <code>Internal Reconn.</code> needs network access.</li> <li>The orange lines tend to require access across process's memory, for instance the famous <code>Pass-the-Hash</code> problem in Windows such that offensive tools access LSASS.exe process memory to dump password hashes.</li> <li>Many advanced in-memory techniques need cross-process access...</li> </ul> <p>There are so many techniques &amp; why just focus on this two activities?</p> <ol> <li>Initial Code-Execution tend to be multi-staged &amp; network access is required.</li> <li>Even if it shifts towards the trend of hiding within images, legit content files etc, it will still have to call-back to C2.</li> <li>Most if not all advanced in-memory techniques require cross-process access, it's inevitable.</li> </ol> <p>We will revisit these 3 points again in the last section.</p>"},{"location":"mental%20models/Code%20Execution/#privilege-sequence","title":"Privilege Sequence","text":"<p>Mostly to spot privilege escalations...</p>"},{"location":"mental%20models/Code%20Execution/#beyond-categorization","title":"Beyond Categorization","text":"<p>Use the mental model to evaluate threat reports &amp; different types of technical controls or products.</p> <p>We started analyzing controls w.r.t various offensive techniques grouped by these three Code-Execution types. </p>"},{"location":"mental%20models/Code%20Execution/#defense-coverage-matrix","title":"Defense Coverage Matrix","text":"Endpoint Controls Type 1: Write New PE File to execute Type 2: Living Off The Land Type 3: Exploit-Driven Anti-Virus (AV) \u26a0 Blocks known bad with signatures but malware mutation is free &amp; voluminous \u2717 Weak (fileless, in-memory) \u2717 Useless (0-day exploits) Application Control (default deny) \u2713 Blocks (allow-list) \u2717 Bypassed (DLL side-loading, scripting &amp; legit commands abuses) \u2717 No protection Driver-based EDR \u26a0 Monitors behavior (evaded by direct syscalls, unhooking) \u26a0 Disarmed by signed drivers, OS tools... \u26a0 Monitors behavior (partial visibility) Ring-fencing with Moving-Target agents \u2713 Deny written PE (on disks) w/o easy loop-holes &amp; tedium of allow-list management \u2713 Disrupts C2, payload delivery &amp; lateral movement (e.g. fileless) \u2713 Disrupts C2, payload delivery &amp; lateral movement"},{"location":"mental%20models/Code%20Execution/#anti-virus-bad-listing","title":"Anti-Virus (Bad-listing)","text":"<p>The problems with traditional signature-based Anti-Virus...</p> <ul> <li>Mutating &amp; evasions are essentially free thanks to numerous public repositories &amp; tools.</li> <li>Updating signatures is a continuous process that many environments can't achieve (e.g. OT networks that are adverse to changes and updates).</li> <li>Not effective against Type 2 techniques.</li> <li>Totally useless against 0-day exploits (Type 3).</li> </ul> <p>Contemporary antivirus companies mostly pivoted to behavior-based detection that identify threats based on actions and system modifications rather than relying solely on file signatures, enabling detection of fileless and non-PE attack vectors.</p> <p>But the general approach still revolves around offensive behaviors &amp; signatures. The next type of controls focuses on allow-listing...</p>"},{"location":"mental%20models/Code%20Execution/#app-control-good-listing","title":"App Control (Good-listing)","text":"<p>Application-Control in principle works well to deny Type 1 since malicious PE files are part of an potentially infinite set. But there are numerous loop-holes in practice... </p> <ul> <li>DLL checking is turned off as it is very resource intensive.</li> <li>Plenty of DLL loading methods which are mostly Type 2 methods to get around App Control reliably.</li> <li>Managing allowed-lists in certain environments can be challenging.</li> </ul> <p>Microsoft's implementations are fragmented. Software Restriction Policy was officially deprecated in 2020 and completely stopped functioning in Windows 11 22H2 fresh installations, though upgraded systems retained limited functionality. Microsoft explicitly recommended transitioning to AppLocker or Windows Defender Application Control (WDAC) as replacements.</p>"},{"location":"mental%20models/Code%20Execution/#edr-only-as-secure-as-windows-inherent-vulnerabilities","title":"EDR (only as secure as Windows' inherent vulnerabilities)","text":"<p>EDR (along with all host controls) security is only as strong as Windows' inherent vulnerabilities allow:</p> <ul> <li>Type 1 malware can bypass monitoring hooks through direct syscalls, kernel callbacks evasion, and API unhooking.</li> <li>A recent example of Type 2 technique is <code>EDR-Freeze</code> disclosed in September 2025 by security researcher TwoSevenOneThree (Zero Salarium) that suspends EDR and antivirus processes indefinitely by abusing Windows Error Reporting (WER) system components. </li> <li>Type 3 methods like 0-day exploits (e.g. UEFI rootkit BlackLotus) may achieve execution before EDR or totally disarm EDR drivers.</li> </ul> <p>When the EDR missed the malicious code that disabled it, that endpoint visibility is totally compromised. Attackers still get around anti-tampering mechanisms like Early Launch Anti-Malware (ELAM) and Kernel-Level protections, by abusing many vulnerable but signed drivers that are out there. Bear in mind that not all EDR solutions are ELAM certified. </p> <p>This isn't about how well EDR detects threats. It's about how well the product stays useful despite the underlying OS flaws. This issue isn't unique to EDR, ALL Windows host controls are susceptible to attacks.</p> <p>Adversaries are well funded to get hold of such products to figure out ways to disarm &amp; evade.</p>"},{"location":"mental%20models/Code%20Execution/#ring-fencing-disrupt-the-vectors-moving-target-protect-the-product","title":"Ring-fencing (Disrupt the vectors) + Moving-Target (Protect the product)","text":"<p>By breaking down Code-Execution into simple 1,2 &amp; 3 bins, it helped us identify these factors:</p> <ol> <li>Most offensive codes tend to be packaged into compiled PE files, not coincidence that ransomware are mostly PEs.</li> <li>Compared to PEs, offensive scripts are easier to reverse engineer.</li> <li>Blocking PE files delivery is common, most corporate proxies can &amp; will, even free email services do that. </li> <li>Type 2 techniques are reliable for getting more compiled codes into the target, despite the network layer controls mentioned above.</li> <li>Type 2 &amp; 3 are also useful for server-side remote code execution (e.g. SQLi &amp; Log4J exploits). </li> </ol> <p>Most if not all INITIAL Code-Executions are based on some multi-staged that WILL eventually involve network &amp; cross-process access. </p> <p>Think of it as a multi-staged rocket launch. It may seem powerful but it is actually quite fragile. If one of the stages fails, the whole launch fails. </p> <p>The last section further explains ring-fencing that disrupts malicious network &amp; cross-process access.</p>"},{"location":"mental%20models/Code%20Execution/#how-to-ring-fence","title":"How to Ring-Fence?","text":"<p>It is basically multi-layered barriers to disrupt attacks, but won't affect legimate processes. Let's use this 3-type model approach to divide &amp; conquer the problem.</p>"},{"location":"mental%20models/Code%20Execution/#type-1","title":"Type 1:","text":"<ul> <li>Malicious PE forms the bulk of the problem.</li> <li>Application Control is useful since it eliminates tracking of an infinite bad-list, BUT... </li> <li>how do we deal with loop-holes like DLL loading by Type 2 &amp; 3 techniques?</li> <li>tedium of maintaining lists?</li> </ul> <p>Two hygiene factors that are conducive to effective App Control, without maintaining allow-lists: </p> <ol> <li>Use <code>Standard Users</code> for your the bulk of users in your client-zones. </li> <li>Avoid deploying programs in user-writable folders &amp; have executable files writable by <code>Standard Users</code>.</li> </ol> <p>When users can write/change those files, so can attacker's malicious processes, which tend to run in user's context during initial intrusion. When that happens:</p> <ul> <li>All files created by Standard Users' processes, are owned by the user/victim.</li> <li>Conversely, all centrally deployed files are typically owned by <code>SYSTEM</code>, <code>TrustedInstaller</code> &amp; <code>Administrators Group</code>. E.g. Programs that are installed in <code>C:\\Program Files...</code></li> </ul> <p>The exception to default file-ownership behavior is under certain UAC setting for Local Admin &amp; Domain Admin, where written files are immediately owned by <code>Administrators Group</code>.</p> <p>This simple file ownership distinction can deny ALL written PE files written under non-privileged context, including DLL loading techniques. A non-privileged user-process cannot change the file ownership to <code>SYSTEM</code>, <code>TrustedInstaller</code> or <code>Administrators Group</code>.</p> <p>It is therefore possible to achieve low cost &amp; effort Application Control, simply with native NTFS ACLs. I covered in detail with my ETW series here. That sharing also includes C# source codes to explain how file-ownership control can be enforced.</p>"},{"location":"mental%20models/Code%20Execution/#type-2-3","title":"Type 2 &amp; 3:","text":"<p>We know that chasing \"bad\" or offensive techniques is a challenge since it is an infinite set like the one shown on the right of the figure: </p> <p>We also know that the set of network &amp; cross-process accessing processes are always finite in any endpoints. The intersection of such process that can be either abused or exploited is a smaller set as shown above. This may look abstract, let's look at a few real world examples:</p> <p></p> <p>This is one of those hide-and-seek games that criminals employ to abuse GitHub as a C2 center. When law enforcement takes down a specific GitHub repository, attackers quickly set up another one. Let's focus on the green box; no matter which repository that is hosting, this is the point where a victim clicks the LNK file that triggers the download of MSHTA.exe, which then downloads more files.</p> <p>Using granular process profiling, we can effectively isolate the network and cross-process access by disrupting the new process profile that deviates from our baseline.</p> <p>\"Coarse\" host firewall rules are not sufficient because they typically focus on either the destination or the program path. In this case, MSHTA.exe is a legitimate system program. There are numerous system binaries that we might not want to block network access for. By extending ideas from Application Control, we can achieve a granular profile of existing processes that egress and access memory across processes. </p> <p>My ETW series delves deeper into this topic and provides code-level explanations of how we can achieve this granular profiling.</p>"},{"location":"mental%20models/Code%20Execution/#what-is-moving-target-why-it-matters","title":"What is Moving-Target &amp; Why it matters?","text":"<p>Remember the CrowdStrike incident? A single mistake with a specific low-level resource file consumed by a kernel driver caused almost a global outage.</p> <p>While causing an outage that is hard to recover may not be beneficial for criminals at large, abusing Windows' inherent weaknesses by exploiting vulnerable drivers to disable EDR, AV, or App Control can be quite useful. This phenomenon is known as Bring-Your-Own-Vulnerable Driver (BYOVD).</p> <p>In the past, there were some barrier to entry for such disabling of host control as it still required some skills. But it has now become commoditized &amp; accessible to low to mid skilled criminals. </p> <p>The core issue is that most product are very static in nature &amp; there are many ways to disable them despite having anti-tampering in place. This perpetuates the unending cycle of updates to deal with this cat-&amp;-mouse game.</p> <p>Moving-Target approach is somewhat a fight fire with fire approach, by ditching traditional kernel drivers for light weight portable ring-fenching agents that can be unique per deployment.</p> <p>Doing so realise the ideal characteristics stated in the last row of the Defensive Coverage Matrix. </p> <p>The benefits of Ring-fencing with Moving Target agents are:</p> <ul> <li>Long term defensive value suitable for protecting critical infrastructure assets that are adverse to constant driver or related signatures updates.</li> <li>Disrupts new malware &amp; initial intrusion callbacks to C2 &amp; lateral movement without upkeeping of signatures.</li> <li>Even under detect-only mode, it has much better signal-to-noise ratio than conventional detection engineering that usually ends up costly &amp; noisy.</li> </ul> <p>There are already more host controls that are based on Ring-Fencing approaches, hopefully we can see more that cannot be easily disarmed by abusing Windows inherent weaknesses.</p>"},{"location":"mental%20models/Tactics%20Techniques%20%26%20Procedures/","title":"Tactics Techniques & Procedures","text":""},{"location":"mental%20models/Tactics%20Techniques%20%26%20Procedures/#what-is-tactics-techniques-procedures","title":"What is Tactics Techniques &amp; Procedures?","text":"<p>Before accomplishing a broad objective like \"make more money\", we often need to break it down to smaller parts or sub-objectives. It's the same for online criminals who want to steal or extort from victims. </p> <ul> <li>Think of Tactics as the sub-objectives, the WHATs (needs to be done) related to the main objective of let's say extortion through ransomware.</li> <li>Techniques would be the skills and the HOWs (doing) related to those sub-objectives. With a ransomware campaign, it won't make sense just to lock a single workstation, it takes skills to install ransomware across the whole network.</li> <li>Procedures would be knowing WHEN to do what. So let's say some ransomware gang gets into a vulnerable VPN server, then what's next? Is denying access to workstations to get victims' attention enough, maybe they need to find where are the backup servers, important files, extract them out of the network for a \"double-extortion\" &amp; so on!</li> </ul>"},{"location":"mental%20models/Tactics%20Techniques%20%26%20Procedures/#why-is-ttp-important","title":"Why is TTP important?","text":"<p>Sun Tzu:  \"If you know the enemy and know yourself, you need not fear the result of a hundred battles. If you know yourself but not the enemy, for every victory gained you will also suffer a defeat. If you know neither the enemy nor yourself, you will succumb in every battle\" </p> <p>Without awareness of adversarial TTP:</p> <ul> <li>Impossible to defend proactively &amp; reacting to incidents      (those with some degree of self-awareness, implemented some controls but don't know about enemies).</li> <li>Don't even know attacks are happening (for those who don't know about self AND enemies).</li> </ul>"},{"location":"mental%20models/Tactics%20Techniques%20%26%20Procedures/#relationship-with-attack-life-cycle","title":"Relationship with Attack Life Cycle","text":"<p>Attack Life Cycle mental model provides a big picture view, &amp; how different phases of attacks are related to the three necessary &amp; sufficient conditions. Attacks are successful when attackers can use accessible methods (intersection between Threat Capabilities &amp; Target Susceptibility) to reach the intended targets:</p> <p></p> <p>With so many methods under the sun, how can we generalise into a mental model that is useful? We need to somehow group methods into tactics to know what exactly are the methods for? </p> <p></p> <p>Tactics within stage 1 to 3 are the sub-objectives for the final objectives of Damaging, Stealing, Tampering &amp; Denial.</p> <ul> <li>Stage 1 &amp; 2 are meant for remote Threat Actors since Insiders typically have direct access to resources </li> <li>Procedures in TTP refers to the sequence of techniques to chained together</li> <li>When attackers are undetected, they spread deeper (like cancers) into compromised networks &amp; ultimately complete offensive objectives.</li> <li>Stage 1 directly to 4 happens with low hanging fruits like poor configurations, exposed service network ports with default, stolen or weak passwords, attackers get lucky &amp; completes objectives without much effort.</li> </ul>"},{"location":"mental%20models/Tactics%20Techniques%20%26%20Procedures/#tactic-needs-techniques","title":"Tactic needs Techniques","text":"<p>I will use a case study of a hypothetical law firm's Ransomware incident to illustrate the various offensive tactics:</p> Tactics Techniques &amp; Tools Vulnerabilities External Recon (Gather Info) A Ransomware targeting legal industry found Ace Legal LLP's support email credentials from a Dark Web forum exposure. Online services using just user-ID &amp; password are susceptible to attacks like identity theft. Payload Delivery(Get in) Using the stolen support credentials, attackers manage to use a Zero-Click vulnerability to deliver malware to Ace Legal support desktop computer that runs 24/7, without the need for any victim interaction. There are a few Zero-Click Outlook vulnerabilities over the years.  Code Execution(Get in) Malicious software or malware launches unhindered within that desktop computer.The initial execution will typical download more payloads like backdoor installer &amp; reports back to attackers' infrastructure known as Command &amp; Control servers. Most Anti-Virus products are ineffective against custom malware used by organised &amp; skilled criminals. Remote Command &amp; Control (C2)(Get in) A C2 server provides Threat Actors some form of C2 interface for them to remotely control the initial compromised asset, in this case the support desktop. Firewalls may be useful for incoming blocks but most malware egress with HTTPS protocol, which is by default unblocked otherwise users within the network won't be able to use their web browsers. Persistent Backdoor(Get in) There's a chance of shutting down or reboot for computers or any networked electronic device. A backdoor is a special malware that lets attackers resume C2 session even after a reboot.  Many businesses DON'T have the budget for security monitoring service.It is almost certain that criminals will test their payloads against popular security products before a campaign. This means most backdoors are installed without being detected.At this point, attackers is ready to move on to the next stage of Attack Life Cycle: Spreading Laterally! Internal Recon(Stay in) Ace Legal's support desktop computer was connected to their file cum printer server.Threat Actors did not bother to scan further since they found the file server that had lots of archived documents. It was a lucky day for this ransomware gang since that computer connects directly to file server that archives. Credential Capture or Abuse(Stay in) Since it was a small network of 5 computers, there wasn't a Domain Controller or Domain Administrator as targets. The support terminal was NOT used to access their Practice Management Software-as-a-Service portal, otherwise attackers could steal session token &amp; assume access into more sensitive information. Privilege-Escalation(Stay in) Attackers easily escalate to Local Admin &amp; starts another privileged session &amp; installs a new backdoor with higher privilege. Everyone was using accounts that are in the Local Administrator group but... Lateral Movement or Internal C2(Stay in) Lateral Movement in simple terms is about attackers moving from one compromised asset to another.With the stolen support account credentials, easily access their file servers. Fortunately for Ace Legal, all other laptops within the network was either sleeping or out of premise for most of the time.In the case of Ace Legal, the network is a simple small network. The attackers did not bother to stay within for too long. Steal files &amp; Deny Access(Complete Objectives) Double-extortion is a means to coerce victims who refuse to pay to unlock their assets by threatening to reveal or sell stolen files in the public or underground forums. Ace Legal used a strong password convention on all archived documents. So the stolen files are inaccessible. Only support desktop was locked by the ransomware. The victims did not bother to pay up since their IT service provider managed to recover it quickly &amp; changed support account password."},{"location":"mental%20models/Tactics%20Techniques%20%26%20Procedures/#visualising-procedures","title":"Visualising Procedures","text":"<p>In a complex network, attackers often have to decide what's their next move &amp; this pattern tend to repeat as a series of attacks: </p> <p><code>Attacker -method1-&gt; Target1 -method2-&gt; Target2... TargetN</code> </p> <p>When we visualise the tactics as a flow, it looks like this:</p> <p></p> <ul> <li>At Stage 2, the whole point is gain initial C2 &amp; install backdoor so that sessions can resume after device reboots, because they need to Stay in Stage 3! </li> <li>Once those two sub-objectives are met, attackers can start internal survey, typically with the immediate compromised asset like checking what kind of accounts are available, any credentials or session tokens to extract &amp; so on.</li> <li>Privilege Escalation is useful (e.g. extract more sensitive data from device) but not always possible especially when there isn't any escalation related vulnerabilities.</li> <li>Attackers also often look at network routing information within the initial host or device, before scanning the network for other useful assets. </li> <li>Moving laterally can be achieved by sending malicious payloads to more assets, causing Code-Execution or when privilege account captured, one can simply issue native commands to control target assets.</li> </ul> <p>*Code-Execution is essential for all other tactical aspects, even the initial asset to the next, other than abusing captured credentials, Code-Execution is usually the result of internal Payload Delivery, similar to what was described in detail in the earlier Hack-in-the-Box sample report.</p> <p>Which is why the topic of Code-Execution deserves a Mental Model on its own... </p>"},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/archive/2021/","title":"2021","text":""},{"location":"blog/category/graph-db/","title":"graph-db","text":""},{"location":"blog/category/memgraph/","title":"memgraph","text":""},{"location":"blog/category/orientdb/","title":"orientdb","text":""},{"location":"blog/category/under-dogs/","title":"under-dogs","text":""},{"location":"blog/category/dotnet/","title":"DotNet","text":""},{"location":"blog/category/attack-life-cycle/","title":"Attack Life Cycle","text":""},{"location":"blog/category/mental-models/","title":"Mental models","text":""},{"location":"blog/category/zerotier/","title":"Zerotier","text":""}]}